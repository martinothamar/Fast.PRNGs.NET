<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <IsPackable>true</IsPackable>

        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://github.com/martinothamar/Fast.PRNGs.NET</PackageProjectUrl>
        <RepositoryUrl>https://github.com/martinothamar/Fast.PRNGs.NET</RepositoryUrl>
        <PackageTags>csharp prng vectorization simd pseudorandom random random-number-generators</PackageTags>
        <RepositoryType>git</RepositoryType>
        <Authors>Martin Othamar</Authors>
        <Copyright>Copyright 2023 Martin Othamar</Copyright>
        <Description>
          Fast PRNG implementations in .NET. Your PRNG is unlikely to be a bottleneck in anything you do, but there are exceptions like for instance Monte Carlo simulations, where generating random samples can take some time.
        </Description>
    </PropertyGroup>

    <ItemGroup>
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>Fast.PRNGs.Tests</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Fody" Version="6.6.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
        <PackageReference Include="InlineIL.Fody" Version="1.7.4" PrivateAssets="all" />
    </ItemGroup>

    <!--<ItemGroup>
        <Compile Include="..\External\RawIntrinsics\*.cs" />
    </ItemGroup>-->

</Project>
